plugins {
  id 'nebula.netflixoss' version '2.2.5'
}

ext.githubProjectName = "Nicobar" 

subprojects {
    group = "com.netflix.${githubProjectName}" 

    repositories { 
        jcenter()
    }
   
    apply plugin: 'nebula.netflixoss'
    apply plugin: 'eclipse'
    apply plugin: 'idea'

    apply plugin: 'java'
    sourceCompatibility = JavaVersion.VERSION_1_7
    targetCompatibility = JavaVersion.VERSION_1_7

    licenseTest.enabled = false

    test {
        // enable TestNG support (default is JUnit)
        useTestNG()
        jvmArgs '-XX:-UseSplitVerifier'  
    }  

    dependencies {
        compile     'org.slf4j:slf4j-api:1.7.0'
        compile     'com.google.code.findbugs:jsr305:2.0.2'
        compile     'com.google.code.findbugs:annotations:2.0.2'
        compile     'commons-lang:commons-lang:2.6'
        compile     'commons-io:commons-io:2.4'
        compile     'commons-collections:commons-collections:3.2.1'
        compile     'net.sf.jgrapht:jgrapht:0.8.3'
        testCompile 'org.testng:testng:6.1.1'
        testCompile 'org.mockito:mockito-core:1.10.8'
        testCompile 'org.slf4j:slf4j-simple:1.7.0'
    }
}

// Aggregate javadocs from subprojects, except nicobar-test-classes
task javadoc(type: Javadoc) {
    source subprojects.collect { project -> project.sourceSets.main.allJava }
    destinationDir = new File(buildDir, 'javadoc')
    // Might need a classpath
    classpath = files(subprojects.collect { project -> project.sourceSets.main.compileClasspath })
}
